📌 Viết Use Case Description chuẩn UML cho ít nhất 2 chức năng quan trọng.

🔻 Use Case 1: Checkin/Checkout

1. Tên Use Case: Checkin/Checkout

2. Tác nhân chính: Nhân viên

3. Mục tiêu: Nhân viên thực hiện chấm công khi bắt đầu ca làm và kết thúc ca làm.

4. Tiền điều kiện:
▪ Nhân viên đã đăng nhập vào hệ thống.
▪ Hệ thống đang hoạt động bình thường.

5. Hậu điều kiện:
▪ Thời gian checkin/checkout được lưu vào cơ sở dữ liệu.
▪ Lịch sử chấm công của nhân viên được cập nhật.

6. Luồng sự kiện chính:
▪ Nhân viên đăng nhập vào hệ thống.
▪ Nhân viên chọn chức năng Checkin/Checkout.
▪ Hệ thống ghi nhận thời gian hiện tại (theo đồng hồ hệ thống).
▪ Hệ thống lưu dữ liệu vào bảng chấm công.
▪ Hệ thống hiển thị thông báo thành công.

7. Luồng sự kiện thay thế (ngoại lệ):
▪ 3a. Nếu nhân viên đã checkin mà tiếp tục checkin → hệ thống thông báo "Bạn đã chấm công vào ca, chỉ có thể Checkout".
▪ 3b. Nếu nhân viên chưa checkin mà chọn checkout → hệ thống thông báo lỗi.
▪ 4a. Nếu hệ thống mất kết nối cơ sở dữ liệu → hiện thông báo "Chấm công thất bại, vui lòng thử lại".


🔻 Use Case 2: Quản lý nhân viên

1. Tên Use Case: Quản lý nhân viên

2. Tác nhân chính: Quản lý

3. Mục tiêu:
▪ Quản lý thêm, sửa, xóa, hoặc tìm kiếm thông tin nhân viên để phục vụ công tác quản trị nhân sự.

4. Tiền điều kiện:
▪ Quản lý đã đăng nhập vào hệ thống.
▪ Quản lý có quyền chỉnh sửa dữ liệu nhân viên.

5. Hậu điều kiện:
▪ Dữ liệu nhân viên trong hệ thống được cập nhật chính xác.

6. Luồng sự kiện chính:
▪ Quản lý chọn chức năng Quản lý nhân viên.
▪ Hệ thống hiển thị danh sách nhân viên hiện có.
▪ Quản lý thực hiện một trong các hành động:
 - Thêm nhân viên mới (nhập thông tin cá nhân, phòng ban, chức vụ).
 - Sửa thông tin nhân viên (cập nhật dữ liệu cũ).
 - Xóa nhân viên (nếu nghỉ việc).
 - Tìm kiếm nhân viên theo tên, mã số, phòng ban.
▪ Hệ thống kiểm tra dữ liệu đầu vào.
▪ Hệ thống lưu thay đổi vào cơ sở dữ liệu.
▪ Hệ thống hiển thị thông báo “Cập nhật thành công”.

7. Luồng sự kiện thay thế (ngoại lệ):
▪ 4a. Nhập dữ liệu thiếu hoặc sai định dạng → hệ thống báo lỗi “Thông tin không hợp lệ”.
▪ 5a. Không thể kết nối cơ sở dữ liệu → hệ thống báo lỗi “Thao tác thất bại, vui lòng thử lại”.
▪ 3c. Nếu xóa nhân viên đang có ca làm việc chưa hoàn tất → hệ thống từ chối và báo “Không thể xóa nhân viên đang trong ca làm việc”.


🔻 Use Case 3: Quản lý ca làm việc

1. Tên Use Case: Quản lý ca làm việc

2. Tác nhân chính: Quản lý

3. Mục tiêu:
▪ Quản lý tạo, chỉnh sửa, phân công hoặc xóa ca làm việc để sắp xếp lịch làm hợp lý cho nhân viên.

4. Tiền điều kiện:
▪ Quản lý đã đăng nhập.
▪ Danh sách nhân viên đã tồn tại trong hệ thống.

5. Hậu điều kiện:
▪ Ca làm việc của nhân viên được lưu và đồng bộ vào lịch chấm công.

6. Luồng sự kiện chính:
▪ Quản lý chọn chức năng Quản lý ca làm việc.
▪ Hệ thống hiển thị danh sách ca làm việc hiện có.
▪ Quản lý thực hiện một trong các hành động:
 - Tạo ca làm việc mới (ngày, giờ bắt đầu, giờ kết thúc, nhân viên được phân công).
 - Chỉnh sửa ca làm việc (thay đổi giờ hoặc nhân viên trực ca).
 - Xóa ca làm việc (nếu không còn cần thiết).
▪ Hệ thống kiểm tra dữ liệu đầu vào (tránh trùng ca, ca rỗng, ca ngoài thời gian hợp lệ).
▪ Hệ thống lưu thay đổi vào cơ sở dữ liệu.
▪ Hệ thống cập nhật lịch làm việc của nhân viên.
▪ Hệ thống hiển thị thông báo “Cập nhật ca làm việc thành công”.

7. Luồng sự kiện thay thế (ngoại lệ):
▪ 4a. Ca làm việc bị trùng giờ với ca đã có → hệ thống báo lỗi “Trùng ca làm việc, vui lòng chọn thời gian khác”.
▪ 4b. Quản lý phân công nhân viên không tồn tại → hệ thống báo “Nhân viên không hợp lệ”.
▪ 5a. Hệ thống lỗi cơ sở dữ liệu → thông báo “Không thể lưu ca làm việc, vui lòng thử lại”.
